{"ast":null,"code":"/**\n * @author Has\n * @reg_date 2018-11-16\n * @summary countdown mixins\n */\n// 3rd Party Libraries\nimport moment from 'moment';\n\nclass Countdown {\n  constructor() {\n    this.state = void 0;\n\n    this.startCountDown = (seconds, countDownHandler) => {\n      const afterTime = moment().add(seconds, 'seconds');\n      let timeDiff = afterTime.diff(moment(), 'seconds');\n      this.state = { ...this.state,\n        diffSeconds: timeDiff\n      };\n      clearInterval(this.state.intervalId);\n      countDownHandler(this.state.diffSeconds);\n\n      if (this.state.diffSeconds <= 0) {\n        this.clearCountDown();\n      } else {\n        let timer = setInterval(() => {\n          timeDiff = afterTime.diff(moment(), 'seconds');\n          this.state = { ...this.state,\n            diffSeconds: timeDiff\n          };\n          countDownHandler(this.state.diffSeconds);\n        }, 1000);\n        this.state = { ...this.state,\n          intervalId: timer\n        };\n      }\n    };\n\n    this.clearCountDown = () => {\n      clearInterval(this.state.intervalId);\n      this.state = { ...this.state,\n        diffSeconds: 0,\n        intervalId: 0\n      };\n    };\n\n    this.state = {\n      diffSeconds: 0,\n      intervalId: 0\n    };\n  }\n\n}\n\n;\nexport const countdown = new Countdown();","map":{"version":3,"sources":["/Users/eomhocheol/Desktop/source/react-typescript-sample/react-typescript-sample/src/utils/mixins/countdown.mixin.ts"],"names":["moment","Countdown","constructor","state","startCountDown","seconds","countDownHandler","afterTime","add","timeDiff","diff","diffSeconds","clearInterval","intervalId","clearCountDown","timer","setInterval","countdown"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAOA,MAAMC,SAAN,CAAgB;AAGZC,EAAAA,WAAW,GAAI;AAAA,SAFfC,KAEe;;AAAA,SAOfC,cAPe,GAOE,CAACC,OAAD,EAAkBC,gBAAlB,KAAiD;AAC9D,YAAMC,SAAS,GAAGP,MAAM,GAAGQ,GAAT,CAAaH,OAAb,EAAsB,SAAtB,CAAlB;AACA,UAAII,QAAQ,GAAGF,SAAS,CAACG,IAAV,CAAeV,MAAM,EAArB,EAAyB,SAAzB,CAAf;AAEA,WAAKG,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AAETQ,QAAAA,WAAW,EAAEF;AAFJ,OAAb;AAKAG,MAAAA,aAAa,CAAC,KAAKT,KAAL,CAAWU,UAAZ,CAAb;AACAP,MAAAA,gBAAgB,CAAC,KAAKH,KAAL,CAAWQ,WAAZ,CAAhB;;AAEA,UAAI,KAAKR,KAAL,CAAWQ,WAAX,IAA0B,CAA9B,EAAiC;AAC7B,aAAKG,cAAL;AACH,OAFD,MAEO;AAEH,YAAIC,KAAU,GAAGC,WAAW,CAAC,MAAM;AAC/BP,UAAAA,QAAQ,GAAGF,SAAS,CAACG,IAAV,CAAeV,MAAM,EAArB,EAAyB,SAAzB,CAAX;AACA,eAAKG,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AAETQ,YAAAA,WAAW,EAAEF;AAFJ,WAAb;AAIAH,UAAAA,gBAAgB,CAAC,KAAKH,KAAL,CAAWQ,WAAZ,CAAhB;AACH,SAP2B,EAOzB,IAPyB,CAA5B;AASA,aAAKR,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AAETU,UAAAA,UAAU,EAAEE;AAFH,SAAb;AAIH;AACJ,KArCc;;AAAA,SAuCfD,cAvCe,GAuCE,MAAO;AACpBF,MAAAA,aAAa,CAAC,KAAKT,KAAL,CAAWU,UAAZ,CAAb;AACA,WAAKV,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AAETQ,QAAAA,WAAW,EAAE,CAFJ;AAGTE,QAAAA,UAAU,EAAE;AAHH,OAAb;AAKH,KA9Cc;;AACX,SAAKV,KAAL,GAAa;AACTQ,MAAAA,WAAW,EAAE,CADJ;AAETE,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AARW;;AAkDf;AAED,OAAO,MAAMI,SAAS,GAAG,IAAIhB,SAAJ,EAAlB","sourcesContent":["/**\n * @author Has\n * @reg_date 2018-11-16\n * @summary countdown mixins\n */\n\n// 3rd Party Libraries\nimport moment from 'moment';\n\ninterface CountState {\n    diffSeconds: number;\n    intervalId: number;\n}\n\nclass Countdown {\n    state: CountState;\n\n    constructor () {\n        this.state = {\n            diffSeconds: 0,\n            intervalId: 0,\n        };\n    }\n\n    startCountDown = (seconds: number, countDownHandler: Function) => {\n        const afterTime = moment().add(seconds, 'seconds');\n        let timeDiff = afterTime.diff(moment(), 'seconds');\n\n        this.state = {\n            ...this.state,\n            diffSeconds: timeDiff\n        }\n\n        clearInterval(this.state.intervalId);\n        countDownHandler(this.state.diffSeconds);\n\n        if (this.state.diffSeconds <= 0) {\n            this.clearCountDown();\n        } else {\n\n            let timer: any = setInterval(() => {\n                timeDiff = afterTime.diff(moment(), 'seconds');\n                this.state = {\n                    ...this.state,\n                    diffSeconds: timeDiff\n                };\n                countDownHandler(this.state.diffSeconds);\n            }, 1000);\n\n            this.state = {\n                ...this.state,\n                intervalId: timer\n            };\n        }\n    }\n\n    clearCountDown = () =>  {\n        clearInterval(this.state.intervalId);\n        this.state = {\n            ...this.state,\n            diffSeconds: 0,\n            intervalId: 0,\n        };\n    }\n};\n\nexport const countdown = new Countdown();\n"]},"metadata":{},"sourceType":"module"}