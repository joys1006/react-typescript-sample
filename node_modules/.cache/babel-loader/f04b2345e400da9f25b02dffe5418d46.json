{"ast":null,"code":"// Project Sources\nimport moment from 'moment';\nconst SampleService = {\n  SampleTableData(payload) {\n    return new Promise((resolve, reject) => {\n      let data = [];\n      const startSize = payload.current > 1 ? payload.current * payload.size - 9 : payload.current;\n      const length = payload.current * payload.size;\n      console.log(payload, length);\n\n      for (let i = startSize; i <= length; i++) {\n        data.push({\n          no: i,\n          name: `목 데이터 테스트${i}`,\n          content: `테스트${i}입니다.`,\n          createdAt: moment(new Date()).format('YYYY-MM-DD')\n        });\n      }\n\n      setTimeout(() => {\n        resolve(data);\n        reject(new Error(\"request is failed\"));\n      }, 2000);\n    }); // return _axios.get(`?page=${payload.page}&size=${payload.size}`);\n  }\n\n};\nexport default SampleService;","map":{"version":3,"sources":["/Users/eomhocheol/Desktop/source/react-typescript-sample/react-typescript-sample/src/services/Apis/sample.service.ts"],"names":["moment","SampleService","SampleTableData","payload","Promise","resolve","reject","data","startSize","current","size","length","console","log","i","push","no","name","content","createdAt","Date","format","setTimeout","Error"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,QAAnB;AAIA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,eAAe,CAACC,OAAD,EAA+D;AAC1E,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAIC,IAA8B,GAAG,EAArC;AACA,YAAMC,SAAS,GAAIL,OAAO,CAACM,OAAR,GAAkB,CAAnB,GAAyBN,OAAO,CAACM,OAAR,GAAkBN,OAAO,CAACO,IAA3B,GAAmC,CAA3D,GAA+DP,OAAO,CAACM,OAAzF;AACA,YAAME,MAAM,GAAIR,OAAO,CAACM,OAAR,GAAkBN,OAAO,CAACO,IAA1C;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ,EAAqBQ,MAArB;;AACA,WAAK,IAAIG,CAAC,GAAGN,SAAb,EAAwBM,CAAC,IAAIH,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;AACtCP,QAAAA,IAAI,CAACQ,IAAL,CACI;AACIC,UAAAA,EAAE,EAAEF,CADR;AAEIG,UAAAA,IAAI,EAAG,YAAWH,CAAE,EAFxB;AAGII,UAAAA,OAAO,EAAG,MAAKJ,CAAE,MAHrB;AAIIK,UAAAA,SAAS,EAAEnB,MAAM,CAAC,IAAIoB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B;AAJf,SADJ;AAQH;;AACDC,MAAAA,UAAU,CAAC,MAAM;AACbjB,QAAAA,OAAO,CAACE,IAAD,CAAP;AACAD,QAAAA,MAAM,CAAC,IAAIiB,KAAJ,CAAU,mBAAV,CAAD,CAAN;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KAnBM,CAAP,CAD0E,CAqB1E;AACH;;AAvBiB,CAAtB;AA0BA,eAAetB,aAAf","sourcesContent":["// Project Sources\nimport moment from 'moment';\nimport TableListPayload from '@src/types/payload/TableListPayload';\nimport TableListResponse from '@src/types/response/TableListResponse';\n\nconst SampleService = {\n    SampleTableData(payload: TableListPayload): Promise<Array<TableListResponse>> {\n        return new Promise((resolve, reject) => {\n            let data: Array<TableListResponse> = [];\n            const startSize = (payload.current > 1) ? (payload.current * payload.size) - 9 : payload.current;\n            const length = (payload.current * payload.size);\n            console.log(payload, length);\n            for (let i = startSize; i <= length; i++) {\n                data.push(\n                    {\n                        no: i,\n                        name: `목 데이터 테스트${i}`,\n                        content: `테스트${i}입니다.`,\n                        createdAt: moment(new Date()).format('YYYY-MM-DD'),\n                    }\n                )\n            }\n            setTimeout(() => {\n                resolve(data);\n                reject(new Error(\"request is failed\"));\n            }, 2000);\n        });\n        // return _axios.get(`?page=${payload.page}&size=${payload.size}`);\n    },\n};\n\nexport default SampleService;\n"]},"metadata":{},"sourceType":"module"}